@page "/authors/edit/{Id}"
@attribute [Authorize(Roles = "Administrator")]
@inject IAuthorRepository _repo
@inject NavigationManager _navManager
@*@inject IToastService _toastService*@

<h3 class="card-title">Edit Author</h3>
<hr />
<br />
@if (isSuccess)
{
    <ErrorMessage Message="Somewthing Went Wrong With the Operation" />
}

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid Selection. Please Try Again" />
}
else if (Model == null)
{
    <LoadingMessage Message="Loading Author For Edit" />
}
else
{
    <EditForm Model="Model" OnValidSubmit="EditAuthor">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group row">
            <div class="col-2">
                <label for="firstname">First Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="Model.Firstname" class="form-control" id="firstname" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label for="lastname">Last Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="Model.Lastname" class="form-control" id="lastname" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label for="bio">Biography</label>
            </div>
            <div class="col-6">
                <InputTextArea @bind-Value="Model.Bio" class="form-control" id="bio" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-6 offset-2">
                <div class="row">
                    <div class="col-6">
                        <button class="btn btn-primary" type="submit">
                            <span class="oi oi-pencil"></span>
                            Submit Changes
                        </button>
                    </div>
                    <div class="col-6">
                        <button @onclick="BackToList" class="btn btn-outline-secondary">
                            <span class="oi oi-media-skip-backward"></span>
                            Back To List
                        </button>
                    </div>

                </div>

            </div>

        </div>

    </EditForm>
}


@code {
    [Parameter]
    public string Id { get; set; }

    private Author Model = new Author();
    private bool isSuccess = false;
    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(Endpoints.AuthorsEndpoint, id);
    }

    private async Task EditAuthor()
    {
       isSuccess = await _repo.Update(Endpoints.AuthorsEndpoint, Model);
        if (isSuccess)
        {
            //_toastService.ShowWarning("Author Updated Successfully", "");
            BackToList();
        }

    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
}

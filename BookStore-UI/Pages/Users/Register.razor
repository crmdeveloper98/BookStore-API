@page "/Register"

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan

<div class="card">
    <h3 class="card-title">Register Now</h3>
    @if (!response)
    {
        <div class="alert alert-danger">
            <p><b>Something went wrong with the registration attempt</b></p>
        </div>
    }
    <div class="card-body col-6">
        <EditForm Model="Model" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group row">
                <div class="col-4">
                    <label for="email">Email Address</label>
                </div>
                <div class="col-6">
                    <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
                </div>    
                <ValidationMessage For="@(() => Model.EmailAddress)" />
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label for="password">Password</label>
                </div>
                <div class="col-6">
                    <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
                </div>
                <ValidationMessage For="@(() => Model.Password)" />
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label for="confirmpassword">Confirm Password</label>
                </div>
                <div class="col-6">
                    <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="Model.ConfirmPassword" />
                </div>
                <ValidationMessage For="@(() => Model.ConfirmPassword)" />
            </div>
            <div class="form-group">
                <div class="col-3 offset-4">
                    <button type="submit" class="btn btn-primary btn-block">Register</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>
@code {
    private readonly RegistrationModel Model = new RegistrationModel();
    bool response = true;

    private async Task HandleRegistration()
    {
        response = await _authRepo.Register(Model);

        if (response)
        {
            _navMan.NavigateTo("/login");
        }
    }
}

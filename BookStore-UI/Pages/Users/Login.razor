@page "/login"

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navManager

<div class="card">
    <h3 class="card-title">Login</h3>
    @if (!response)
    {
        <div class="alert alert-danger">
            <p><b>Something went wrong with the login attempt</b></p>
        </div>
    }
    <div class="card-body col-6">
        <EditForm Model="Model" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group row">
                <div class="col-4">
                    <label for="email">Email Address</label>
                </div>
                <div class="col-6">
                    <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
                </div>                
                <ValidationMessage For="@(() => Model.EmailAddress)" />
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label for="password">Password</label>
                </div>
                <div class="col-6">
                    <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
                </div>                
                <ValidationMessage For="@(() => Model.Password)" />
            </div>
            <div class="form-group">
                <div class="col-3 offset-4">
                    <button type="submit" class="btn btn-primary btn-block">Login </button>
                </div>                
            </div>
        </EditForm>
    </div>
</div>

@code {
    private readonly LoginModel Model = new LoginModel();
    private bool response = true;
    private async Task HandleLogin()
    {
        response = await _authRepo.Login(Model);

        if (response)
        {
            _navManager.NavigateTo("/");
        }

    }
}